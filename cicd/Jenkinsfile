@Library('shared-lib') _
pipeline {
    agent any
    environment {
        NODE_VERSION = 'nodejs' // Name of your NodeJS installation in Global Tool Configuration
        IMAGE_TAG = 'v1.0'
        DOCKER_CREDENTIALS_ID = 'dockerhub'
        DOCKER_REGISTRY = 'gevorgyan'
    }
    stages {
        stage('Setup NodeJS') {
            steps {
                  nodeSetup()
            }
        }
        stage('Checkout') {
            steps {

                  checkoutCode()
                }
        }
        /*
        stage('Build') {

            steps {
                script {
                    sh 'npm install' // Install dependencies locally
                }
            }
        }
        stage('Test') {

            steps {
                script {
                    sh 'npm test'
                }
            }
        }*/
    stage('Lint Dockerfile') {
agent {
                docker {
                    image 'hadolint/hadolint' // Use the Hadolint image for linting
                }
            }
        
            steps {
                script {
                      sh 'hadolint Dockerfile'
                }
            }
        }










        
stage('Setup Docker') {
            steps {
              dockerSetup()
            }
        }

//     stage('Lint Dockerfile') {
// agent {
//                 docker {
//                     image 'hadolint/hadolint' // Use the Hadolint image for linting
//                     label 'docker-linter'
//                 }
//             }
        
//             steps {
//                 script {
//                       sh 'hadolint Dockerfile'
//                 }
//             }
//         }

        stage('Build Docker Image') {
            steps {

buildDockerImage()

            }
        }
 stage('Vulnerability Scan') {
            steps {

vulnerabilityScan()
            }
        }
        
        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: env.DOCKER_CREDENTIALS_ID, usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh """
                        
                        docker login -u "${DOCKER_USER}" --password "${DOCKER_PASS}" 
                        docker push ${DOCKER_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}
                    """
                }
            }
        }

        stage('Trigger Deployment Pipelines') {
            steps {
                script {
                    if (env.BRANCH_NAME == 'main') {
                        build job: 'Deploy_to_main', wait: false
                    } else if (env.BRANCH_NAME == 'dev') {
                        build job: 'Deploy_to_dev', wait: false
                    }
                }
            }
        }
    }
}
