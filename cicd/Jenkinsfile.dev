pipeline {
    agent any
    environment {
        DOCKER_CREDENTIALS_ID = 'dockerhub'
        DOCKER_REGISTRY = 'gevorgyan'
        IMAGE_NAME = 'nodedev'
        IMAGE_TAG = 'v1.0'
        CONTAINER_NAME = 'nodedev'
        PORT = '3001'
    }
stages {
stage('Setup Docker') {
            steps {
                script {
                    def dockerTool = tool name: 'docker'
                    env.PATH = "${dockerTool}/bin:${env.PATH}"
                    sh 'docker -v' // Verify Docker version
                }
            }
        }
        stage('Pull Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: env.DOCKER_CREDENTIALS_ID, usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh """
                        docker login -u "$DOCKER_USER" --password-stdin "$DOCKER_PASS"
                        docker pull ${DOCKER_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}
                    """
                }
            }
        }
        stage('Deploy Docker Image') {
            agent { docker { image 'docker:latest' } }
            steps {
                script {
                    sh '''
                        docker stop $(docker ps -q --filter "name=${CONTAINER_NAME}") || true
                        docker rm $(docker ps -a -q --filter "name=${CONTAINER_NAME}") || true
                    '''
                    sh "docker run -d --name ${CONTAINER_NAME} --expose ${PORT} -p ${PORT}:3000 ${DOCKER_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}"
                }
            }
        }
    }
}
